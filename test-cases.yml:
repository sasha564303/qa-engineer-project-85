---
- summary: |
    Краткое описание тест-кейса. Успешная авторизация и начало игровой сессии
  requirement: |
    Тестируемое требование. Проверить что пользователь может войти в игшру и начат игровую сессию без ошибок
  prerequisites: |
    Открыта страница с игрой
  test-data: |
    Email/Логин = Sasha4567 Пароль = GIT78RU
  steps:
    - Открыть сайт
    - Вводим корректный логин и пароль
    - Нажимаем кнопку «Войти»
    - Дожидаемся загрузки меню
    - Выбираем уровень сложности и язык игры
    - Начинаем игру
  expected-result: |
    Авторизация проходит успешно 
    Главный экран отображается корретно 
    Игровая сессия начинается без ошибок

- summary: |
    Поведени онлайн-игры при отключении интернета во время матча
  requirement: |
    Проверить, как игра обратывает потерю сети: реакция интерфейса, сохранения прогресса, попытка переподключения
  prerequisites:
    Открыта страница игры
  test-data: |
    Игровой ID
    Тип матча
    Время отключения
    Причина отключения
  steps:
    - Начать матч 
    - Имитировать отключение интернета(вручную или скриптом)
    - Проанализировать реакцию на отключение
    - Включить интернет и проверить переподключение
  expected-result: |
    Игроку отображается сообщение "Подключение потеряно"
    Сайт пытается автомотически восстановить соединение.
    После восстановления: матч продолжается либо переходит в защищённый режим

- summary: |
    Проверка сохранения прогресса пользователя после успешного прохождения уровня
  requirement: |
    Убедится, что прогресс сохраняется корретно после успешного завершения уровня
  prerequisites:
    Пользователь автаризован в системе
    Игра запущена
    Пользователь находится на завершающем этапе уровня
  test-data: |
    Имя пользователя = Sasha5678
    Название уровня = сторчный_значитель
    Статус завершения = успешно
  steps:
    - Завершить текущий уровень
    - Дождаться отображения экрана завершения уровня
    - Выбрать действие "продолжить или сохранить"
    - Закрыть сайт с игрой 
    - Повторного открыть игру, если тебуется войти под тем же пользователем
    - Перейти к разделу с прогрессом
  expected-result: |
    Прогресс должен быть сохранён
    Очки для пользователя начислены
    Пользователь поднимается в топе  

- summary: |
    Загрузка задачи по уровню сложсти 
  requirement: |
    Проверка корректной загрузки програмной задачи согласно выбранному уровню сложности 
  prerequisites:
    Пользователь автаризован в системе
    Игра запущена и пользователь находится в интерфейсе выбора задачи
    В системе доступны задачи разных уровней сложности 
  test-data: |
    Уровень сложности = easy
    Название заачи = проверка на строчные буквы и цыфры
    Лимит времени = 7 минут
    Язык = JS
    Статус данных = валидные
  steps:
    - Перейти в раздел задач "Выбрать уровень"
    - Выбрать уровень сложности: лёгкий 
    - Проверить, что загрузиласть задача с методанными, соответствующими уровню easy
    - Вернутся к выбору и выбрать средний уровень 
    - Проверить что загруженная задача соответствует уровню medium
    - Прверить для сложного уровня "hard"
    - Отправить тестовое решение, что бы убедится, что задача активна
  expected-result: |
    Задачи загружаются корректно и соответствуют выбраному уровню сложности 
    Все элементы задачи отображаются: описание, примеры, ограничения
    Тестовая отправка проходит без ошибок компиляции, если код валиден

- summary: |
    Проверка таймера при прохождении задачи
  requirement: |
    Убедится, что таймер запускается, отсчитывает время и влият на результат задачи согласно правилам
  prerequisites:
    Пользователь авторизован в системе
    Загружена программная задача с ограничением времени
    Таймер должен отображатся на экране
  test-data: |
    Время начала = 12:34
    Лимит времени = 7 минут
  steps:
    - Запустить задачу с ограничением времени в 7 минут
    - Нажать кнопку "начать" - задача считается запущенной
    - Проверить что таймер стартовал с значения 7:00 и обратный отсчёт идёт
    - Ввести код решения не привышая лимита времени
    - Нажать кнопку "отправть" до завершения времени
    - Проверить что результат был принят и отображен 
    - Повторить процесс, но дождаться завершения таймера без отправки решения
    - Проверить, что отображено сообщение о привышении времени или блокировки отправки
  expected-result: |
    Таймер страртует при запуске задачи и отображается корретно
    Время отсчитывается в реальном времени
    Отправка решения в пределах лимита успешно обрабатывается 
    По истечению времени задача блокируется или выдаёт соответствующее уведомление

- summary: |
    Проверка выбора я зыка программирования (Python, Java, C++)
  requirement: |
    Проверить, что игрок может корректно выбирать язык программирования, и игра адаптируется под выбор без ошибок
  prerequisites:
    Игрок авторизован
    Доступен икран выбора языка (в нвстройках)
    Языки в списке: Python, Java, C++
  test-data: |
    Выбраный языки = Python, Java, C++
    Ожидаемое поведение = Игра адаптируется под все языки
  steps:
    - Запустить игру и пройти до экрана выбора языка
    - Выбрать Python "Убедится, что интерфейс, задания, реплики и доступные библиотеки подстроены под Python" 
    - Перейти к выбору языка снова и выбрать Java "Проверить аналогичную адаптацию снова"
    - Повторить для C++
    - Завершить превый уровень или миссию, используя каждый из языков "Проверить, что внутриигровая логика учитывает специфику выбранного языка (например, синтаксис задач, методы решения)"
  expected-result: |
    После выбора любого языка интерфейс и игровые элементы корректно обновляются
    Задания и игровые механики соответсвуют возможностям и синтаксису выбранного языка
    Никаких графических артефактов, сбоев, зависаний

- summary: |
    Проверка завершения матча и корректного определения побидителя в игре
  requirement: |
    Убидится, что после завершения матча система правильно рассчитывает очки, определяет побидителя и отображает соответсвующие данные
  prerequisites:
    Минимум два активных игрока участвуют в матче
    Игра запущена и находится в финальной фазе
    Все игровые условия выполнены для завершения (таймер истёк, финальный этап решён и т.д.)
  test-data: |
    Игрок = А, В
    Очки игрока А = 40
    Очки игрока В = 0
    Ожидаемый результат = победитель А
  steps:
    - Запустить матч с двумя игроками
    - Убедится, что каждый игрок проходит игровой этап, набирая очки (за задачи, исправление багов, оптимизацию кода и т.д.)
    - Дождатся автоматического завершения матча или инициировать в ручную
    - Проверить : что таймер остановлен, счёт каждого игрока фиксируется, игра переходит в режим подведения итогов
    - Проверить логики определения победителя "победитель игрок с самым быстрым временем, в случае ревенства указать ничью"
    - Убедится, что победитель отображается на экране после завершения, отображаются очки за игру
  expected-result: |
    Матч завешается корректно 
    Системе определяет победителя на основе игровой логики
    Победитель и очки отображаются корректно 
    Нет ошибок, зависаний или несоответствий

- summary: |
    Оценка времени загрузки игровых уровней и стабильность проццесов
  requirement: |
    Проверить, что уровни загружаются в пределах допустимого времени без зависаний и с корректной инициализацией контента
  prerequisites:
    Игра запущена
    Уровни доступны для начала игры
    Включён логгирование времени загрузки
  test-data: |
    Первичная загрузка = 2.5 сек
    Повторная загрузка = 1.3 сек
    Ожидаемое поведение = Загрузка успешна, интефейс прогружен
  steps:
    - Запустить игру
    - Выбрать язык игры, уровень сложности, против кого будешь играть
    - Наать уровень, зафиксировать время с момента нажатия до полной готовности экрана
    - Повторить для следующих игроков, языков
    - Оценить: все игровые объекты подгружены корректно, нет ошибок или сбоев
    - Проверить текст при: первой загрузки, повторной загрузке, слабом интернет-соединении
    - Повторить лог-файлы (если доступны) на предмет превышения пороговых значений загрузки
  expected-result: |
    Загрузка игры занимает не более 3-х секунд
    Все элементы уровня прогружаются корректно
    Нет ошибок, крашей, "провалов" текстур или зависаний 
    При повторной загрузке уровень отрывается быстрее
    В случае слобой связи - отображается предупреждение 
